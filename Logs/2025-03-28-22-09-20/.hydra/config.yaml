local_system:
  datasets_root: ${oc.env:CMB_ML_DATA}/Datasets/
  assets_dir: ${oc.env:CMB_ML_DATA}/Assets/
file_system:
  sim_folder_prefix: sim
  sim_str_num_digits: 4
  dataset_template_str: '{root}/{dataset}/'
  default_dataset_template_str: '{root}/{dataset}/{stage}/{split}/{sim}'
  working_dataset_template_str: '{root}/{dataset}/{working}{stage}/{split}/{sim}'
  subdir_for_log_scripts: scripts
  log_dataset_template_str: '{root}/{dataset}/{hydra_run_dir}'
  log_stage_template_str: '{root}/{dataset}/{working}{stage}/{hydra_run_dir}'
  top_level_work_template_str: '{root}/{dataset}/{stage}/{hydra_run_dir}'
  wmap_chains_dir: WMAP/wmap_lcdm_mnu_wmap9_chains_v5
pipeline:
  raw:
    assets_out:
      deltabandpass:
        handler: QTable
        path_template: '{src_root}/CMB-ML/cmb-ml_deltabandpass.tbl'
      noise_src_varmaps:
        handler: HealpyMap
        path_template: '{src_root}/Planck/{filename}'
      wmap_chains:
        handler: Mover
        path_template: '{src_root}/WMAP/{filename}'
      mask_src_map:
        path_template: '{src_root}/Planck/COM_CMB_IQU-nilc_2048_R3.00_full.fits'
        handler: HealpyMap
        use_fields: 3
        file_size: 1610
  download_sims_reference:
    assets_out:
      shared_links:
        handler: Config
        path_template: '{src_root}/CMB-ML/upload_records_CMB-ML_512_1450.json'
  check_hydra_configs: null
  make_noise_cache:
    assets_out:
      scale_cache:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{freq}_noise_sd_map.fits'
    assets_in:
      deltabandpass:
        stage: raw
      noise_src_varmaps:
        stage: raw
    dir_name: Simulation_B_NoiseCache
  make_sim_configs:
    assets_out:
      split_configs:
        handler: Config
        path_template: '{root}/{dataset}/{working}{stage}/{split}/split_config.yaml'
      wmap_config:
        handler: Config
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/wmap_params.yaml'
        path_template_alt: '{root}/{dataset}/{working}{stage}/{split}/wmap_params.yaml'
    splits:
    - train
    - valid
    - test
    dir_name: Simulation_C_Configs
    make_stage_log: true
  make_theory_ps:
    assets_out:
      cmb_ps:
        handler: CambPowerSpectrum
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_ps_fid.txt'
        path_template_alt: '{root}/{dataset}/{working}{stage}/{split}/cmb_ps_fid.txt'
    assets_in:
      wmap_config:
        stage: make_sim_configs
    splits:
    - train
    - valid
    - test
    dir_name: Simulation_CMB_Power_Spectra
    make_stage_log: true
  make_obs_no_noise:
    assets_out:
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_map_fid.fits'
      sky_no_noise_maps:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/sky_{freq}_no_noise_map.fits'
    assets_in:
      deltabandpass:
        stage: raw
      cmb_ps:
        stage: make_theory_ps
    splits:
    - train
    - valid
    - test
    dir_name: Simulation_D_No_Noise
    make_stage_log: true
  make_noise:
    assets_out:
      noise_maps:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/noise_{freq}_map.fits'
    assets_in:
      deltabandpass:
        stage: raw
      scale_cache:
        stage: make_noise_cache
      noise_model:
        stage: make_noise_models
      noise_avg:
        stage: make_planck_noise_sims_avgs
    dir_name: Simulation_E_Noise
    splits:
    - train
    - valid
    - test
    make_stage_log: true
  make_sims:
    assets_out:
      obs_maps:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{stage}/{split}/{sim}/obs_{freq}_map.fits'
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{stage}/{split}/{sim}/cmb_map_fid.fits'
    assets_in:
      deltabandpass:
        stage: raw
      noise_maps:
        stage: make_noise
      sky_no_noise_maps:
        stage: make_obs_no_noise
      cmb_map:
        stage: make_obs_no_noise
    dir_name: Simulation
    splits:
    - train
    - valid
    - test
    make_stage_log: true
    top_level_working: true
  make_mask:
    assets_out:
      mask:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{stage}/mask.fits'
      mask_sm:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{stage}/mask_sm.fits'
    assets_in:
      mask:
        stage: raw
        orig_name: mask_src_map
    dir_name: Simulation_Mask
  download_sims:
    assets_out:
      temp_tar_dir:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}'
      dataset_dir:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/'
    assets_in:
      deltabandpass:
        stage: raw
      shared_links:
        stage: download_sims_reference
    dir_name: Download_Sims_Working
    splits:
    - train
    - valid
    - test
    make_stage_log: true
    top_level_working: true
  get_planck_noise_sims:
    assets_out:
      noise_sims:
        handler: HealpyMap
        path_template: '{src_root}/PlanckNoise/{filename}'
    assets_in:
      deltabandpass:
        stage: raw
  make_planck_noise_sims_avgs:
    assets_out:
      noise_avg:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{stage}/avg_{freq}_{fields}_{n_sims}.fits'
    assets_in:
      deltabandpass:
        stage: raw
      noise_sims:
        stage: get_planck_noise_sims
    dir_name: NoiseModel
  make_noise_models:
    assets_out:
      noise_model:
        handler: Mover
        path_template: '{root}/{dataset}/{stage}/noise_model_{freq}_{n_sims}.npz'
    assets_in:
      deltabandpass:
        stage: raw
      noise_sims:
        stage: get_planck_noise_sims
      noise_avg:
        stage: make_planck_noise_sims_avgs
    dir_name: NoiseModel
  download_noise_model:
    assets_out:
      temp_tar_dir:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}'
      dataset_dir:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/'
    assets_in:
      deltabandpass:
        stage: raw
    dir_name: NoiseModel
    make_stage_log: false
  working_dir_issue_theory_ps:
    assets_out:
      cmb_ps:
        handler: CambPowerSpectrum
        path_template: '{root}/{dataset}/Simulation_Working/{stage}/{split}/{sim}/cmb_ps_fid.txt'
        path_template_alt: '{root}/{dataset}/Simulation_Working/{stage}/cmb_ps_fid.txt'
    assets_in:
      wmap_config:
        stage: make_sim_configs
    splits:
    - train
    - test
    - valid
    dir_name: Simulation_CMB_Power_Spectra
    make_stage_log: false
  convert_theory_ps:
    assets_out:
      theory_ps:
        path_template_alt: '{root}/{dataset}/Sims_Analysis/{stage}/{split}/theory_ps.npy'
        path_template: '{root}/{dataset}/Sims_Analysis/{stage}/{split}/{sim}/theory_ps.npy'
        handler: NumpyPowerSpectrum
    assets_in:
      theory_ps:
        stage: working_dir_issue_theory_ps
        orig_name: cmb_ps
    splits:
    - train
    - test
    - valid
    wmap_n_ps: 50
    dir_name: Analysis_Theory_PS
  ps_theory_stats:
    assets_out:
      wmap_ave:
        fn: ''
        path_template: '{root}/{dataset}/Sims_Analysis/{stage}/wmap_ave.npy'
        handler: NumpyPowerSpectrum
      wmap_std:
        fn: ''
        path_template: '{root}/{dataset}/Sims_Analysis/{stage}/wmap_std.npy'
        handler: NumpyPowerSpectrum
    assets_in:
      theory_ps:
        stage: convert_theory_ps
    splits:
    - train
    epochs: ${use_epochs_ps_stats}
    override_n_sims: ${n_test_cap}
    wmap_n_ps: 50
    dir_name: Analysis_Theory_PS_Range
  train:
    assets_out:
      model:
        handler: PyTorchModel
        path_template: '{root}/{dataset}/{working}{stage}/model_{epoch}.pth'
      best_epoch:
        handler: Config
        path_template: '{root}/{dataset}/{working}{stage}/best_epoch.yaml'
      loss_record:
        handler: AppendingCsvHandler
        path_template: '{root}/{dataset}/{working}{stage}/loss_record.csv'
    assets_in:
      model:
        stage: train
      cmb_map:
        stage: make_sims
      obs_maps:
        stage: make_sims
    splits:
    - train
    - test
    dir_name: DeepSphere_B_Train_Deterministic
    make_stage_log: true
  load_bayesian:
    assets_out:
      model:
        handler: PyTorchModel
        path_template: '{root}/{dataset}/{working}{stage}/model_{epoch}.pth'
      best_epoch:
        handler: Config
        path_template: '{root}/{dataset}/{working}{stage}/best_epoch.yaml'
      loss_record:
        handler: AppendingCsvHandler
        path_template: '{root}/{dataset}/{working}{stage}/loss_record.csv'
    assets_in:
      model:
        stage: train
      cmb_map:
        stage: make_sims
      obs_maps:
        stage: make_sims
    splits:
    - train
    - test
    dir_name: DeepSphere_C_Train_Bayesian
    make_stage_log: true
  predict:
    assets_out:
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_map_pred_{epoch}.fits'
    assets_in:
      model:
        stage: train
      best_epoch:
        stage: train
      obs_maps:
        stage: make_sims
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs}
    dir_name: DeepSphere_D_Predict_Deterministic
    make_stage_log: true
  predict_bayesian:
    assets_out:
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_map_pred_{epoch}.fits'
      uncertainty:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/uncertainty_{epoch}.fits'
    assets_in:
      model:
        stage: load_bayesian
      best_epoch:
        stage: load_bayesian
      obs_maps:
        stage: make_sims
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs}
    dir_name: DeepSphere_E_Predict_Bayesian
    make_stage_log: true
  final_infer:
    assets_out:
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_map_pred_{epoch}.fits'
    assets_in:
      model:
        stage: train
      best_epoch:
        stage: train
      obs_maps:
        stage: make_sims
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs}
    dir_name: DeepSphere_D_Predict_Deterministic
    make_stage_log: true
  common_post_map_real:
    assets_out:
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_real_post.fits'
    assets_in:
      cmb_map:
        stage: make_sims
      mask:
        stage: make_mask
    splits:
    - ${splits.run_inference_on}
    dir_name: Analysis_D_Common_Post_Map_Real
  common_post_map_pred:
    assets_out:
      cmb_map:
        handler: HealpyMap
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_pred_post_{epoch}.fits'
    assets_in:
      cmb_map:
        stage: final_infer
      mask:
        stage: make_mask
    splits:
    - ${splits.run_inference_on}
    dir_name: Analysis_E_Common_Post_Map_Pred
    epochs: ${use_epochs_imgs}
  show_cmb_post_masked:
    assets_out:
      cmb_map_render:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_{epoch}_{field}.svg'
    assets_in:
      cmb_map_post:
        stage: common_post_map_pred
        orig_name: cmb_map
      cmb_map_sim:
        stage: common_post_map_real
        orig_name: cmb_map
      deltabandpass:
        stage: raw
    splits:
    - ${splits.run_inference_on}
    override_n_sims: ${n_show_cap}
    plot_min_max: 500
    make_stage_log: false
    dir_name: Analysis_2_Show_CMB_Post
    epochs: ${use_epochs_imgs}
  show_cmb_post_masked_ind:
    assets_out:
      real_map_render:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_real_{sim}_{epoch}_{field}.pdf'
      pred_map_render:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_pred_{sim}_{epoch}_{field}.pdf'
      diff_map_render:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_diff_{sim}_{epoch}_{field}.pdf'
      hist_render:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_hist_{sim}_{epoch}_{field}.pdf'
      real_pred_cbar:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cbar_real_pred_{field}.pdf'
      diff_cbar:
        handler: EmptyHandler
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cbar_diff_{field}.pdf'
    assets_in:
      cmb_map_post:
        stage: common_post_map_pred
        orig_name: cmb_map
      cmb_map_sim:
        stage: common_post_map_real
        orig_name: cmb_map
      deltabandpass:
        stage: raw
    splits:
    - ${splits.run_inference_on}
    override_n_sims: ${n_show_cap}
    plot_min_max: 500
    make_stage_log: false
    dir_name: Analysis_2_Show_CMB_Post_Indiv
    epochs: ${use_epochs_imgs}
  pixel_analysis:
    assets_out:
      report:
        handler: Config
        path_template: '{root}/{dataset}/{working}{stage}/pixel_report.yaml'
    assets_in:
      cmb_map_post:
        stage: common_post_map_pred
        orig_name: cmb_map
      cmb_map_sim:
        stage: common_post_map_real
        orig_name: cmb_map
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_map_stats}
    dir_name: Analysis_F_Pixel_Report
  pixel_summary_tables:
    assets_out:
      overall_stats:
        path_template: '{root}/{dataset}/{working}{stage}/epoch_{epoch}/overall_stats.csv'
        handler: PandasCsvHandler
      stats_per_split:
        path_template: '{root}/{dataset}/{working}{stage}/epoch_{epoch}/stats_per_split.csv'
        handler: PandasCsvHandler
    assets_in:
      report:
        stage: pixel_analysis
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_map_stats}
    dir_name: Analysis_3_Pixel_Summary_Tables
  pixel_summary_figs:
    assets_out:
      boxplots:
        path_template: '{root}/{dataset}/{working}{stage}/epoch_{epoch}/boxplots.png'
        handler: EmptyHandler
      histogram:
        path_template: '{root}/{dataset}/{working}{stage}/epoch_{epoch}/{metric}_histogram.png'
        handler: EmptyHandler
    assets_in:
      report:
        stage: pixel_analysis
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_map_stats}
    dir_name: Analysis_4_Pixel_Summary_Figs
  make_pred_ps:
    assets_out:
      auto_real:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/ps_real.npy'
        handler: NumpyPowerSpectrum
      auto_pred:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/ps_pred_{epoch}.npy'
        handler: NumpyPowerSpectrum
      x_real_pred:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/ps_x_{epoch}.npy'
        handler: NumpyPowerSpectrum
      diff_real_pred:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/ps_diff_{epoch}.npy'
        handler: NumpyPowerSpectrum
    assets_in:
      cmb_map_real:
        stage: make_sims
        orig_name: cmb_map
      cmb_map_post:
        stage: final_infer
        orig_name: cmb_map
      mask:
        stage: make_mask
      mask_sm:
        stage: make_mask
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    dir_name: Analysis_K_Power_Spectra
  one_ps_fig:
    assets_out:
      ps_figure:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_ps_figure_{epoch}.pdf'
        handler: EmptyHandler
    assets_in:
      theory_ps:
        stage: convert_theory_ps
      auto_real:
        stage: make_pred_ps
      auto_pred:
        stage: make_pred_ps
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    override_n_sims: ${n_show_cap}
    dir_name: Analysis_11_One_PS_Fig
  ps_analysis:
    assets_out:
      report:
        fn: ''
        path_template: '{root}/{dataset}/{working}{stage}/ps_report.csv'
        handler: PandasCsvHandler
    assets_in:
      theory_ps:
        stage: convert_theory_ps
      auto_real:
        stage: make_pred_ps
      auto_pred:
        stage: make_pred_ps
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    override_n_sims: ${n_test_cap}
    wmap_n_ps: 50
    dir_name: Analysis_L_PS_Report
  ps_summary_tables:
    assets_out:
      epoch_stats:
        path_template: '{root}/{dataset}/{working}{stage}/all_summaries.csv'
        handler: PandasCsvHandler
    assets_in:
      report:
        stage: ps_analysis
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    dir_name: Analysis_5_PS_Summary_Tables
  ps_summary_figs:
    assets_out:
      boxplots:
        path_template: '{root}/{dataset}/{working}{stage}/epoch_{epoch}/{baseline}_boxplots.png'
        handler: EmptyHandler
      histogram:
        path_template: '{root}/{dataset}/{working}{stage}/epoch_{epoch}/{baseline}_{metric}_histogram.png'
        handler: EmptyHandler
    assets_in:
      report:
        stage: ps_analysis
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    dir_name: Analysis_6_PS_Summary_Figs
  post_ps_fig:
    assets_out:
      ps_figure_theory:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_ps_figure_theory_{epoch}_{sim}_{model}.pdf'
        handler: EmptyHandler
      ps_figure_real:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_ps_figure_real_{epoch}_{sim}_{model}.pdf'
        handler: EmptyHandler
    assets_in:
      theory_ps:
        stage: convert_theory_ps
      auto_real:
        stage: make_pred_ps
      auto_pred:
        stage: make_pred_ps
      wmap_ave:
        stage: ps_theory_stats
      wmap_std:
        stage: ps_theory_stats
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    override_n_sims: ${n_show_cap}
    dir_name: Analysis_7_F_Post_PS_Solo_Figs
  post_post_ps_fig:
    assets_out:
      ps_figure_theory:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_ps_figure_theory.pdf'
        handler: EmptyHandler
      ps_figure_real:
        path_template: '{root}/{dataset}/{working}{stage}/{split}/{sim}/cmb_ps_figure_real.pdf'
        handler: EmptyHandler
    assets_in:
      theory_ps:
        stage: convert_theory_ps
      auto_real:
        stage: make_pred_ps
      auto_pred:
        stage: make_pred_ps
      wmap_ave:
        stage: ps_theory_stats
      wmap_std:
        stage: ps_theory_stats
    splits:
    - ${splits.run_inference_on}
    epochs: ${use_epochs_ps_stats}
    override_n_sims: ${n_show_cap}
    dir_name: Analysis_7_F_Post_PS_Solo_Figs
scenario:
  nside: ${nside}
  detector_freqs: ${detectors}
  map_fields: ${map_fields}
  precision: float
  units: uK_CMB
  full_instrument:
    30: IQU
    44: IQU
    70: IQU
    100: IQU
    143: IQU
    217: IQU
    353: IQU
    545: I
    857: I
splits:
  name: 2-2
  Train:
    n_sims: 2
  Test:
    n_sims: 2
    n_sims_cap: ${n_infer_cap}
  run_inference_on: test
model:
  deepsphere:
    network:
      depth: 4
      laplacian_type: combinatorial
      kernel_size: 3
      tau: 0.1
      length_scale: 0.0001
    train:
      device: null
      learning_rate: 0.001
      n_epochs: ${num_epochs_deterministic}
      batch_size: 11
      checkpoint_every: 5
      extra_check:
      - 1
      - 2
      - 3
      - 6
      - 9
      restart_epoch: null
      start_valid: 50
    train_bayesian:
      learning_rate: 0.0001
      n_epochs: ${num_epochs_bayesian}
      batch_size: 7
      restart_epoch: null
      start_valid: 50
    predict:
      device: null
      batch_size: 11
      best_epoch: null
    predict_bayesian:
      batch_size: 7
      mc_samples: 20
  analysis:
    px_functions:
      mse:
        plot_name: Mean Squared Error (MSE)
        axis_name: MSE
        label: MSE
        func: skimage.metrics.mean_squared_error
      psnr:
        plot_name: Peak Signal-to-Noise Ratio (PNSR)
        axis_name: PNSR
        label: PSNR
        func: psnr
      rmse:
        plot_name: Root Mean Squared Error (RMSE)
        axis_name: RMSE
        label: RMSE
        func: rmse
      mae:
        plot_name: Mean Absolute Error (MAE)
        axis_name: MAE
        label: MAE
        func: sklearn.metrics.mean_absolute_error
      r2:
        plot_name: Coefficient of Determination (R^2)
        axis_name: R2
        label: R2
        func: sklearn.metrics.r2_score
      nrmse:
        plot_name: Normalized Root MSE (NRMSE)
        axis_name: NRMSE
        label: NRMSE
        func: skimage.metrics.normalized_root_mse
        kwargs:
          normalization: euclidean
    px_operations:
      num_processes: 10
    mask_threshold: 0.9
    mask_sm_apo_size: 20.6
    mask_sm_apo_type: C1
    post_map_mask_b4_deconv: false
    post_map_do_deconv: true
    post_map_mask_b4_remove_dipole: true
    post_map_remove_dipole: true
    ps_use_smooth_mask: true
    lmax_ratio: 2.0
    ps_functions:
      mse:
        plot_name: Mean Squared Error (MSE)
        axis_name: MSE
        label: MSE
        func: skimage.metrics.mean_squared_error
      psnr:
        plot_name: Peak Signal-to-Noise Ratio (PNSR)
        axis_name: PNSR
        label: PSNR
        func: psnr
      rmse:
        plot_name: Root Mean Squared Error (RMSE)
        axis_name: RMSE
        label: RMSE
        func: rmse
      mae:
        plot_name: Mean Absolute Error (MAE)
        axis_name: MAE
        label: MAE
        func: sklearn.metrics.mean_absolute_error
      r2:
        plot_name: Coefficient of Determination (R^2)
        axis_name: R2
        label: R2
        func: sklearn.metrics.r2_score
      nrmse:
        plot_name: Normalized Root MSE (NRMSE)
        axis_name: NRMSE
        label: NRMSE
        func: skimage.metrics.normalized_root_mse
        kwargs:
          normalization: euclidean
    ps_operations:
      num_processes: 10
dataset_name: ${scenario.map_fields}_${scenario.nside}_${splits.name}
working_dir: Bayesian-Deepsphere-Adams_iso/
fig_model_name: DeepSphere
nside: 32
detectors:
- 30
- 44
- 70
- 100
- 143
- 217
- 353
- 545
- 857
map_fields: I
num_epochs_deterministic: 200
num_epochs_bayesian: 200
use_epochs:
- init
- best
use_epochs_imgs: ${use_epochs}
use_epochs_map_stats: ${use_epochs}
use_epochs_ps_stats: ${use_epochs}
n_show_cap: 2
n_infer_cap: null
run_inference_on: test
